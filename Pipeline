pipeline {
    agent any
    tools{
        jdk 'jdk17'
        maven 'maven3'
    }
    
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/jaiswaladi246/Ekart.git'
            }
        }
        
        stage('Compile') {
            steps {
                sh "mvn clean compile"
            }
        }
        
        stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Ekart -Dsonar.projectKey=Ekart \
                            -Dsonar.java.binaries=. '''
                }
            }
        }
        
        stage('Test') {
            steps {
                sh "mvn clean test -DskipTests"
            }
        }
        
        stage('File System Scan') {
            steps {
                sh "trivy fs --format table -o trivy-fs-report.html  || true"
            }
        }
        
        stage('Build') {
            steps {
               sh "mvn clean install -DskipTests"
            }
        }
        
        stage('Docker Build') {
            steps {
               sh 'docker build -f docker/Dockerfile -t ekart-app:latest .'
            }
        }
        
        stage('Docker Image Scan') {
            steps {
                sh "trivy image --format table -o trivy-image-report.html ekart-app:latest || true "
            }
        }
        
        stage('Docker Deploy/Run') {
            steps {
               sh """
                docker rm -f ekart || true
                docker run -d --name ekart -p 8070:8070 ekart-app:latest"""
            }
        }
    }
}